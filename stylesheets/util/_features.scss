@use 'sass:list';
@use 'sass:string';

@use "breakpoint/settings";

//////////////////////////////
// Returns whether the feature can have a min/max pair
//////////////////////////////
//TODO: Update this list
$_min-max: 'color',
           'color-index',
           'aspect-ratio',
           'device-aspect-ratio',
           'device-height',
           'device-width',
           'height',
           'monochrome',
           'resolution',
           'width';

@function min-max($feature) {
  @return list.index($_min-max, $feature) != null;
}

//////////////////////////////
// Returns whether the feature can have a string value
//////////////////////////////
//TODO: Update this list
$_string: 'orientation',
          'scan',
          'color',
          'aspect-ratio',
          'device-aspect-ratio',
          'pointer',
          'luminosity';

@function string-value($feature) {
  @return (list.index($_string, $feature)) != null or
            ((string.slice($feature, 1, 4) == 'max-' or string.slice($feature, 1, 3) == 'min-') and
            min-max(string.slice($feature, 5, -1)) and list.index($_string, string.slice($feature, 5, -1)) != null);
}

//////////////////////////////
// Returns whether the feature is a media type
//////////////////////////////
//TODO: Update this list
$_media-types: 'all',
               'braille',
               'embossed',
               'handheld',
               'print',
               'projection',
               'screen',
               'speech',
               'tty',
               'tv';

@function is-media($feature) {
  @each $media in $media-types {
    @if ($feature == $media) or ($feature == 'not #{$media}') or ($feature == 'only #{$media}') {
      @return true;
    }
  }

  @return false;
}

//////////////////////////////
// Returns whether the feature can stand alone
//////////////////////////////
//TODO: Update this list
$single-string-features: 'color',
                                    'color-index',
                                    'grid',
                                    'monochrome';

@function single-string($feature) {
  @each $item in $single-string-features {
    @if $feature == $item {
      @return true;
    }
  }
  @return false;
}

//////////////////////////////
// Returns whether the feature
//////////////////////////////
@function is-resolution($feature) {
  $resolutions: 'device-pixel-ratio', 'dpr';

  @if settings.get('transform resolutions') {
    $resolutions: append($resolutions, 'resolution');
  }

  @each $reso in $resolutions {
    @if index($feature, $reso) or index($feature, 'min-#{$reso}') or index($feature, 'max-#{$reso}') {
      @return true;
    }
  }

  @return false;
}
